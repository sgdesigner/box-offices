{"version":3,"sources":["components/Navs.styled.js","components/Navs.js","components/styled.js","components/actor/ActorCard.styled.js","components/actor/ActorCard.js","images/not-found.png","components/actor/ActorGrid.js","components/CustomRadio.js","components/Title.styled.js","components/Title.js","components/MainPageLayout.js","components/show/ShowCard.styled.js","components/show/ShowCard.js","misc/custom-hooks.js","components/show/ShowGrid.js","misc/config.js","Pages/Home.styled.js","Pages/Home.js","components/show/Cast.styled.js","components/show/Cast.js","components/show/Details.styled.js","components/show/Details.js","components/show/Seasons.styled.js","components/show/Seasons.js","components/show/ShowMainData.styled.js","components/show/ShowMainData.js","Pages/Show.styled.js","Pages/Shows.js","Pages/Starred.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["NavList","styled","ul","LinkStyled","Link","theme","mainColors","gray","blue","LINKS","to","text","Navs","location","useLocation","map","elements","className","pathname","memo","FlexGrid","FadeIn","SearchCard","div","Star","props","active","StyledActorCard","ActorCard","image","name","gender","country","birthday","deathday","src","alt","ActorGrid","data","person","medium","notFound","id","RadioWrapper","label","CustomRadio","value","onChange","checked","htmlFor","type","TitleWrapper","dark","Title","title","subtitle","MainPageLayout","console","log","children","StyledShowCard","ShowCard","summary","onStarClick","isStarred","summaryAsText","split","slice","join","replace","onClick","showsReducer","prevState","action","showId","filter","usePersistedReducer","reducer","initialState","key","useReducer","initial","persisted","localStorage","getItem","JSON","parse","state","dispatch","useEffect","setItem","stringify","useShows","ShowGrid","starredShows","dispatchStarred","item","includes","show","API_BASE_URL","apiGet","queryString","a","fetch","then","response","json","SearchInput","input","RadioInputsWrapper","SearchButtonWrapper","Home","useState","sessionStorage","setInput","newState","useLastQuery","results","setResults","searchOption","setSearchOption","onSearch","onRadioChange","event","target","isShowSearch","onKeyDown","keyCode","onInputChange","placeholder","length","CastList","Cast","cast","character","voice","IMG_PLACEHOLDER","DetailsWrapper","Details","status","premiered","network","SeasonsWrapper","SeasonList","Seasons","seasons","reduce","acc","season","episodeOrder","number","premiereDate","endDate","MainDataWrapper","Headline","TagList","ShowMainData","rating","tags","original","average","dangerouslySetInnerHTML","__html","tag","i","ShowPageWrapper","InfoBlock","Shows","useParams","isLoading","error","isMounted","result","setTimeout","catch","err","message","genres","_embedded","Starred","starred","shows","setShows","setIsLoading","setError","promises","Promise","all","apidata","App","exact","path","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","headers","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"8NAEaA,EAAUC,IAAOC,GAAV,mIAQPC,EAAaF,YAAOG,IAAPH,CAAH,8jBAKZ,qBAAGI,MAAkBC,WAAWC,QAE9B,qBAAGF,MAAkBC,WAAWE,QAQnB,qBAAGH,MAAkBC,WAAWE,Q,OCpBpDC,EAAQ,CACZ,CAACC,GAAG,IAAIC,KAAO,QACf,CAACD,GAAG,WAAWC,KAAK,YAGhBC,EAAO,WACX,IAAMC,EAAWC,cAEjB,OACE,8BACG,cAACd,EAAD,UAEGS,EAAMM,KAAI,SAASC,GACjB,OAAQ,6BACN,cAACb,EAAD,CAAYO,GAAMM,EAASN,GAAIO,UAAaD,EAASN,KAAOG,EAASK,SAAW,SAAS,GAAzF,SAA8FF,EAASL,QADvFK,EAASN,YAUxBS,iBAAKP,G,wBCxBPQ,EAAWnB,YAAOoB,IAAPpB,CAAH,wGAQRqB,EAAarB,IAAOsB,IAAV,oYA8BVC,EAAOvB,IAAOsB,IAAV,2TAKK,SAACE,GAEnB,OAAOA,EAAMC,OAAO,YAAc,UC9CzBC,EAAkB1B,YAAOqB,EAAPrB,CAAH,+GCeb2B,EAhBG,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,MAAOC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,OAAQC,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC3D,OACE,eAACP,EAAD,WACE,qBAAKV,UAAY,cAAjB,SACE,qBAAKkB,IAAKN,EAAOO,IAAI,YAEvB,+BACGN,EADH,IACUC,EAAM,WAAOA,EAAP,KAAmB,QAEnC,4BAAIC,EAAO,qBAAiBA,GAAY,qBACvCC,EAAW,sCAASA,KAAgB,KACrC,mBAAGhB,UAAY,WAAf,SAA2BiB,EAAQ,eAAWA,GAAa,cCblD,MAA0B,sCC0B1BG,EAtBG,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAClB,OAEE,cAAClB,EAAD,UAEKkB,EAAKvB,KAAI,YAAa,IAAXwB,EAAU,EAAVA,OACV,OAAQ,cAAC,EAAD,CAEAT,KAAQS,EAAOT,KACfE,QAAWO,EAAOP,QAAQO,EAAOP,QAAQF,KAAO,KAChDG,SAAYM,EAAON,SACnBC,SAAYK,EAAOL,SACnBH,OAAUQ,EAAOR,OACjBF,MAASU,EAAOV,MAAMU,EAAOV,MAAMW,OAASC,GANrCF,EAAOG,UCR1BC,EAAe1C,IAAO2C,MAAV,w0BAuBM,qBAAGvC,MAAkBC,WAAWE,QAMhC,qBAAGH,MAAkBC,WAAWE,QAmBtC,qBAAGH,MAAkBC,WAAWE,QAI5CqC,EAAc,SAAC,GAAuC,IAAtCD,EAAqC,EAArCA,MAAMF,EAA+B,EAA/BA,GAAGI,EAA4B,EAA5BA,MAAMC,EAAsB,EAAtBA,SAASC,EAAa,EAAbA,QAC5C,OAGK,eAACL,EAAD,CAAcM,QAAWP,EAAzB,UACGE,EACD,uBAAOF,GAAMA,EACbQ,KAAK,QACLJ,MAASA,EACTC,SAAYA,EACZC,QAAWA,IAEX,6BAOM7B,iBAAK0B,GCxEPM,EAAelD,IAAOsB,IAAV,yOAKZ,qBAAGlB,MAAkBC,WAAWE,QAOhC,qBAAGH,MAAkBC,WAAW8C,QCZvCC,EAAQ,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,MAAMC,EAAc,EAAdA,SACpB,OACE,eAACJ,EAAD,WACG,6BAAKG,IACL,4BAAIC,QAKIpC,iBAAKkC,GCOLG,EAfQ,SAAC/B,GAEtB,OADAgC,QAAQC,IAAI,6BAEV,8BACG,gCACD,cAAC,EAAD,CAAOJ,MAAQ,aACfC,SAAW,6CAEb,cAAC,EAAD,IACE9B,EAAMkC,eCTCC,EAAiB3D,YAAOqB,EAAPrB,CAAH,4lBCyBZ4D,EAvBE,SAAC,GAAwD,IAAtDnB,EAAqD,EAArDA,GAAIb,EAAiD,EAAjDA,MAAOC,EAA0C,EAA1CA,KAAMgC,EAAoC,EAApCA,QAAQC,EAA4B,EAA5BA,YAAYC,EAAgB,EAAhBA,UACjDC,EAAgBH,EAAO,UACtBA,EAAQI,MAAM,KAAKC,MAAM,EAAG,IAAIC,KAAK,KAAKC,QAAQ,SAAU,IADtC,OAEzB,iBAEJ,OACE,eAACT,EAAD,WACE,qBAAK3C,UAAY,cAAjB,SACE,qBAAKkB,IAAKN,EAAOO,IAAI,WAGvB,6BAAKN,IAEL,4BAAImC,IAEJ,sBAAKhD,UAAY,OAAjB,UACE,cAAC,IAAD,CAAMP,GAAE,gBAAWgC,GAAnB,uBACA,wBAAQQ,KAAK,SAASoB,QAAWP,EAAjC,SAA8C,cAACvC,EAAD,CAAME,OAAUsC,a,QCnBtE,SAASO,EAAaC,EAAUC,GAE9B,OAAOA,EAAOvB,MAEZ,IAAK,MAEH,OADAO,QAAQC,IAAI,sBACN,GAAN,mBAAYc,GAAZ,CAAsBC,EAAOC,SAI/B,IAAK,SAEH,OADAjB,QAAQC,IAAI,sBACLc,EAAUG,QAAQ,SAACD,GAAD,OAAWA,IAASD,EAAOC,UAGtD,QAAU,OAAOF,GAKrB,SAASI,EAAoBC,EAAQC,EAAaC,GAChDtB,QAAQC,IAAI,YACZ,MAAyBsB,qBAAWH,EAAQC,GAAa,SAACG,GAExDxB,QAAQC,IAAI,kBACbD,QAAQC,IAAIuB,GACV,IAAMC,EAAYC,aAAaC,QAAQL,GAEtC,OAAOG,EAAYG,KAAKC,MAAMJ,GAAWD,KAN7C,mBAAOM,EAAP,KAAaC,EAAb,KAeC,OALAC,qBAAU,WACPhC,QAAQC,IAAI,uBACdyB,aAAaO,QAAQX,EAAIM,KAAKM,UAAUJ,MACvC,CAACA,EAAMR,IAEF,CAACQ,EAAMC,GAIV,SAASI,IAAsB,IAAbb,EAAY,uDAAR,QAE3B,OADAtB,QAAQC,IAAI,qBACLkB,EAAoBL,EAAa,GAAGQ,GCxC7C,I,MAuCec,EAvCE,SAAC,GAAY,IAAXvD,EAAU,EAAVA,KAEjB,EAAuCsD,IAAvC,mBAAOE,EAAP,KAAoBC,EAApB,KAEA,OADAtC,QAAQC,IAAI,oBAGV,cAACtC,EAAD,UAGKkB,EAAKvB,KAAI,SAACiF,GAET,IAAMhC,EAAY8B,EAAaG,SAASD,EAAKE,KAAKxD,IAWlD,OACM,cAAC,EAAD,CAEEA,GAAIsD,EAAKE,KAAKxD,GACdZ,KAAQkE,EAAKE,KAAKpE,KAClBD,MAASmE,EAAKE,KAAKrE,MAAMmE,EAAKE,KAAKrE,MAAMW,OAASC,EAClDqB,QAAWkC,EAAKE,KAAKpC,QACrBE,UAAaA,EACbD,YAjBa,WAGhBgC,EADC/B,EACe,CAACd,KAAM,SAASwB,OAASsB,EAAKE,KAAKxD,IAGnC,CAACQ,KAAK,MAAMwB,OAASsB,EAAKE,KAAKxD,OAKrCsD,EAAKE,KAAKxD,U,0BC9B7ByD,GAAY,yBAGX,SAAeC,GAAtB,mC,+CAAO,WAAsBC,GAAtB,eAAAC,EAAA,sEAEgBC,MAAM,GAAD,OAAIJ,IAAJ,OAAmBE,IACzBG,MAAK,SAACC,GACF,OAAOA,EAASC,UAJnC,cAEDD,EAFC,yBAOEA,GAPF,4C,sBCFA,I,2BAAME,GAAc1G,IAAO2G,MAAV,8XAmBXC,GAAqB5G,IAAOsB,IAAV,kIAUlBuF,GAAsB7G,IAAOsB,IAAV,+TAMR,qBAAGlB,MAAkBC,WAAWE,QC0FzCuG,GApHF,WAIX,MJoCK,WAAyC,IAAnBhC,EAAkB,uDAAZ,YACjC,EAAyBiC,oBAAS,WAChC,IAAM9B,EAAY+B,eAAe7B,QAAQL,GAEzC,OAAOG,EAAYG,KAAKC,MAAMJ,GAAW,MAH3C,mBAAO0B,EAAP,KAAaM,EAAb,KAWE,MAAO,CAACN,EALgB,SAACO,GACzBD,EAASC,GACTF,eAAevB,QAAQX,EAAIM,KAAKM,UAAUwB,MI7CnBC,GAAzB,mBAAOR,EAAP,KAAaM,EAAb,KACA,EAA6BF,mBAAS,MAAtC,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAAuCN,mBAAS,SAAhD,mBAAOO,EAAP,KAAoBC,EAApB,KAYA,SAASC,IAIPrB,GAAO,WAAD,OAAYmB,EAAZ,cAA8BX,IAASJ,MAAK,SAACC,GAGjDa,EAAWb,MAkCf,SAASiB,EAAcC,GAGrBH,EAAgBG,EAAMC,OAAO9E,OAK/B,IAAM+E,EAA8B,UAAfN,EAErB,OAEE,8BAEE,eAAC,EAAD,WACA,cAACZ,GAAD,CAAazD,KAAO,OACnB4E,UA3CL,SAAmBH,GACG,KAAhBA,EAAMI,SACRN,KA0CC1E,SAAY,SAAC4E,GAAD,OAjEjB,SAAuBA,GAGpBT,EAASS,EAAMC,OAAO9E,OA8DCkF,CAAcL,IAClC7E,MAAS8D,EACTqB,YAAc,yBAGjB,eAACpB,GAAD,WACE,cAAC,EAAD,CACEjE,MAAQ,QACRF,GAAK,eACLI,MAAQ,QACRC,SAAY2E,EACZ1E,QAAW6E,IAId,8BACA,cAAC,EAAD,CACGjF,MAAQ,SACRF,GAAG,gBACHI,MAAQ,SACRC,SAAY2E,EACZ1E,SAAY6E,SAQjB,cAACf,GAAD,UACE,wBAAQ5D,KAAK,SAASoB,QAAWmD,EAAjC,sBAnEIJ,GAA4B,IAAjBA,EAAQa,OACb,6CAENb,GAAWA,EAAQa,OAAO,EAIvB,8BAEGb,EAAQ,GAAGnB,KAAK,cAAC,EAAD,CAAU5D,KAAQ+E,IAAa,cAAC,EAAD,CAAY/E,KAAS+E,MAOrE,W,SC9DFc,GAAWlI,IAAOsB,IAAV,gkBCqBN6G,GArBF,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACd,OACE,cAACF,GAAD,UACGE,EAAKtH,KAAI,WAA+BgE,GAA/B,IAAGxC,EAAH,EAAGA,OAAQ+F,EAAX,EAAWA,UAAWC,EAAtB,EAAsBA,MAAtB,OACR,sBAAetH,UAAY,YAA3B,UACE,qBAAKA,UAAY,cAAjB,SACE,qBACEkB,IAAKI,EAAOV,MAAQU,EAAOV,MAAMW,OAASgG,EAC1CpG,IAAI,kBAGR,qBAAKnB,UAAY,QAAjB,SACE,iCACE,sBAAMA,UAAY,OAAlB,SAA0BsB,EAAOT,OADnC,MACmDwG,EAAUxG,KAD7D,IACoEyG,EAAQ,UAAY,UATlFxD,SCLL0D,GAAiBxI,IAAOsB,IAAV,6GCeZmH,GAdC,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,OAAQC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,QACpC,OACE,eAACJ,GAAD,WACE,yCACU,+BAAOE,OAEjB,2CACaC,EADb,IACyBC,EAAO,aAASA,EAAQ/G,MAAS,YCPnDgH,GAAiB7I,IAAOsB,IAAV,sGAUdwH,GAAa9I,IAAOsB,IAAV,+YC0BRyH,GAnCC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACjB,OACE,eAACH,GAAD,WACE,mDACoB,+BAAOG,EAAQf,YAEnC,mDACqB,IACnB,+BACGe,EAAQC,QAAO,SAACC,EAAKC,GAAN,OAAiBD,EAAMC,EAAOC,eAAc,QAGhE,cAACN,GAAD,UACGE,EAAQlI,KAAI,SAAAqI,GAAM,OACjB,sBAAqBnI,UAAY,cAAjC,UACE,sBAAKA,UAAY,OAAjB,UACE,wCAAWmI,EAAOE,UAClB,2CACY,+BAAOF,EAAOC,qBAG5B,sBAAKpI,UAAU,QAAf,mBACS,IACP,iCACGmI,EAAOG,aADV,MAC2BH,EAAOI,gBAV5BJ,EAAO1G,aChBd+G,GAAkBxJ,IAAOsB,IAAV,+hBAiCfmI,GAAWzJ,IAAOsB,IAAV,4TAqBRoI,GAAU1J,IAAOsB,IAAV,+PCtBLqI,GA7BM,SAAC,GAA4C,IAA1C9H,EAAyC,EAAzCA,KAAM+H,EAAmC,EAAnCA,OAAQ/F,EAA2B,EAA3BA,QAASgG,EAAkB,EAAlBA,KAAMjI,EAAY,EAAZA,MACnD,OACE,eAAC4H,GAAD,WACE,qBAAKtH,IAAKN,EAAQA,EAAMkI,SAAWvB,EAAiBpG,IAAI,eACxD,sBAAKnB,UAAY,YAAjB,UACE,eAACyI,GAAD,WACE,6BAAK5H,IACL,gCACE,cAACN,EAAD,CAAME,QAAU,IAChB,+BAAOmI,EAAOG,SAAW,cAG7B,qBAAK/I,UAAU,UAAUgJ,wBAAyB,CAAEC,OAAQpG,KAE5D,wCACQ,IACN,cAAC6F,GAAD,UACGG,EAAK/I,KAAI,SAACoJ,EAAKC,GAAN,OACR,+BAAeD,GAAJC,kBCpBZC,GAAkBpK,IAAOsB,IAAV,sRAgBf+I,GAAYrK,IAAOsB,IAAV,mIC0GPgJ,OArHf,WAEE,IACO7H,EADQ8H,cACR9H,GA0BP,EAAyBsC,sBAvBT,SAACR,EAAWC,GAE1B,OAAOA,EAAOvB,MAGZ,IAAK,gBACH,OAAO,6BAAIsB,GAAX,IAAqBiG,WAAU,EAAMC,MAAM,KAAKxE,KAAKzB,EAAOyB,OAG9D,IAAK,eACH,OAAO,6BAAI1B,GAAX,IAAqBiG,WAAU,EAAMC,MAAMjG,EAAOiG,QAGpD,QAAU,OAAOlG,KAIA,CACnB0B,KAAK,KACLuE,WAAY,EACZC,MAAQ,OAGV,mBAAOnF,EAAP,KAAaC,EAAb,KAEC/B,QAAQC,IAAI,iBACZD,QAAQC,IAAI6B,GAEX,IAAOW,EAAuBX,EAAvBW,KAAKuE,EAAkBlF,EAAlBkF,UAAUC,EAAQnF,EAARmF,MAuCvB,OA/BDjF,qBAAU,WAEVhC,QAAQC,IAAI,gBACV,IAAIiH,GAAY,EAsBhB,OApBAvE,GAAO,UAAD,OAAW1D,EAAX,kCAA8C8D,MAAK,SAACoE,GAIrDD,GAEDE,YAAW,WACTrF,EAAS,CAACtC,KAAK,gBAAgBgD,KAAK0E,MACpC,QAIHE,OAAM,SAACC,GACLJ,GAEDnF,EAAS,CAACtC,KAAK,eAAewH,MAAMK,EAAIC,aAKrC,WACHL,GAAY,KAEhB,CAACjI,IAGC+H,GAEFhH,QAAQC,IAAI,wBACL,wDAGJgH,GAEFjH,QAAQC,IAAI,kCACL,yDAKP,eAAC2G,GAAD,WACC,cAAC,GAAD,CAAcxI,MAASqE,EAAKrE,MAAOC,KAAQoE,EAAKpE,KAC9C+H,OAAU3D,EAAK2D,OACf/F,QAAWoC,EAAKpC,QACfgG,KAAQ5D,EAAK+E,SAGhB,eAACX,GAAD,WACE,yCACA,cAAC,GAAD,CACE3B,OAAUzC,EAAKyC,OACdE,QAAW3C,EAAK2C,QAChBD,UAAa1C,EAAK0C,eAIvB,eAAC0B,GAAD,WACE,yCACA,cAAC,GAAD,CAASrB,QAAW/C,EAAKgF,UAAUjC,aAGrC,eAACqB,GAAD,WACE,sCACA,cAAC,GAAD,CAAMjC,KAAQnC,EAAKgF,UAAU7C,cCpEtB8C,GA7CC,WAEd,MAAkBvF,IAAXwF,EAAP,oBACA,EAAyBpE,mBAAS,MAAlC,mBAAOqE,EAAP,KAAaC,EAAb,KACA,EAAgCtE,oBAAS,GAAzC,mBAAMyD,EAAN,KAAgBc,EAAhB,KACA,EAAwBvE,mBAAS,MAAjC,mBAAM0D,EAAN,KAAYc,EAAZ,KA4BA,OAzBC/F,qBAAU,WAEZ,GAAG2F,GAAWA,EAAQlD,OAAO,EAAE,CAC7B,IAAMuD,EAAWL,EAAQrK,KAAI,SAAC2D,GAC5B,OAAO0B,GAAO,UAAD,OAAW1B,OAG1BgH,QAAQC,IAAIF,GAAUjF,MAAK,SAAAoF,GAE1B,OADCnI,QAAQC,IAAI,UAAUkI,GAChBA,EAAQ7K,KAAI,SAACmF,GAClB,MAAO,CAACA,cAERM,MAAK,SAAAa,GACN5D,QAAQC,IAAI,UAAU2D,GACtBiE,EAASjE,GACTkE,GAAa,MAEZT,OAAM,SAACJ,GACPc,EAASd,EAAMM,SACfO,GAAa,WAGhBA,GAAa,KAEX,CAACH,IAEF,8BACC,eAAC,EAAD,WACGX,GAAa,kDACdC,GAAS,iDACRD,IAAcY,GAAS,oDACvBZ,IAAcC,GAASW,GAAS,cAAC,EAAD,CAAU/I,KAAO+I,UCpCnDhL,GAAQ,CACZC,WAAY,CACVE,KAAM,UACND,KAAM,UACN6C,KAAM,YAiCKyI,OA7Bf,WAGE,OACC,cAAC,IAAD,CAAexL,MAASA,GAAxB,SAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOyL,OAAK,EAAEC,KAAO,IAArB,SACE,cAAC,GAAD,MAGF,cAAC,IAAD,CAAOD,OAAK,EAAEC,KAAO,WAArB,SACE,cAAC,GAAD,MAGF,eAAC,IAAD,CAAOD,OAAK,EAACC,KAAO,YAApB,eAIE,cAAC,GAAD,OAEH,cAAC,IAAD,mCCvBEC,GAAcC,QACW,cAA7BC,OAAOrL,SAASsL,UAEe,UAA7BD,OAAOrL,SAASsL,UAEhBD,OAAOrL,SAASsL,SAASC,MAAM,2DAqCnC,SAASC,GAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACT9F,MAAK,SAACmG,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBtH,QACfiH,UAAUC,cAAcO,YAI1BvJ,QAAQC,IACN,+GAKE6I,GAAUA,EAAOU,UACnBV,EAAOU,SAASN,KAMlBlJ,QAAQC,IAAI,sCAGR6I,GAAUA,EAAOW,WACnBX,EAAOW,UAAUP,WAO5B7B,OAAM,SAACJ,GACNjH,QAAQiH,MAAM,4CAA6CA,MCxFjEyC,IAASC,OAAO,cAAC,IAAD,UAAY,cAAC,GAAD,MAAoBC,SAASC,eAAe,SDcjE,SAAkBf,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIe,IAAIC,cAAwBtB,OAAOrL,SAAS4M,MACpDC,SAAWxB,OAAOrL,SAAS6M,OAIvC,OAGFxB,OAAOyB,iBAAiB,QAAQ,WAC9B,IAAMrB,EAAK,UAAMkB,cAAN,sBAEPxB,KAgEV,SAAiCM,EAAOC,GAEtChG,MAAM+F,EAAO,CACXsB,QAAS,CAAE,iBAAkB,YAE5BpH,MAAK,SAACC,GAEL,IAAMoH,EAAcpH,EAASmH,QAAQE,IAAI,gBAEnB,MAApBrH,EAASkC,QACO,MAAfkF,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5CvB,UAAUC,cAAcuB,MAAMxH,MAAK,SAACmG,GAClCA,EAAasB,aAAazH,MAAK,WAC7B0F,OAAOrL,SAASqN,eAKpB7B,GAAgBC,EAAOC,MAG1BzB,OAAM,WACLrH,QAAQC,IAAI,oEAtFVyK,CAAwB7B,EAAOC,GAI/BC,UAAUC,cAAcuB,MAAMxH,MAAK,WACjC/C,QAAQC,IACN,+GAMJ2I,GAAgBC,EAAOC,OCrC/B6B,K","file":"static/js/main.c93042c5.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nexport const NavList = styled.ul`\r\n  display: flex;\r\n  justify-content: center;\r\n  list-style: none;\r\n  margin: 0 0 30px;\r\n  padding: 0;\r\n`;\r\n\r\nexport const LinkStyled = styled(Link)`\r\n  margin: 0 10px;\r\n  padding: 3px 15px;\r\n  position: relative;\r\n  text-decoration: none;\r\n  color: ${({ theme }) => theme.mainColors.gray};\r\n  &.active {\r\n    color: ${({ theme }) => theme.mainColors.blue};\r\n    &:after {\r\n      content: '';\r\n      position: absolute;\r\n      display: block;\r\n      height: 2px;\r\n      left: 0%;\r\n      bottom: 0;\r\n      background-color: ${({ theme }) => theme.mainColors.blue};\r\n      animation: slide-in 0.3s ease-in forwards;\r\n      @keyframes slide-in {\r\n        from {\r\n          left: 50%;\r\n          width: 0;\r\n        }\r\n        to {\r\n          left: 0%;\r\n          width: 100%;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React,{memo} from 'react'\r\nimport { useLocation } from 'react-router'\r\nimport { NavList,LinkStyled } from './Navs.styled'\r\n\r\n\r\nconst LINKS = [\r\n  {to:'/',text : 'Home'},\r\n  {to:'/starred',text:'Starred'},\r\n  \r\n]\r\nconst Navs = () => {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <div>\r\n       <NavList>\r\n        {\r\n          LINKS.map(function(elements){\r\n            return (<li key ={elements.to}>\r\n              <LinkStyled to = {elements.to} className = {elements.to === location.pathname ? 'active':''}>{elements.text}</LinkStyled>\r\n              </li>)\r\n          })\r\n        }\r\n       </NavList>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(Navs);\r\n","import FadeIn from 'react-fade-in';\r\nimport styled from 'styled-components'\r\n\r\n\r\nexport const FlexGrid = styled(FadeIn)`\r\n   \r\n   display: flex;\r\n   justify-content: center;\r\n   flex-wrap: wrap;\r\n\r\n`\r\n\r\nexport const SearchCard = styled.div`\r\n  width: 300px;\r\n  height: 100%;\r\n  margin: 20px 15px 40px;\r\n\r\n  .img-wrapper {\r\n    width: 100%;\r\n    height: 420px;\r\n    overflow: hidden;\r\n    border: 1px solid #ddd;\r\n    img {\r\n      object-fit: cover;\r\n      height: 100%;\r\n      width: 100%;\r\n    }\r\n    \r\n  }\r\n\r\n\r\n \r\n  h1 {\r\n    margin: 10px 0;\r\n    font-size: 21px;\r\n  }\r\n\r\n  p {\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nexport const Star = styled.div`\r\n  display: inline-block;\r\n  width: 18px;\r\n  height: 18px;\r\n  /* background-color: #ffc806; */\r\n  background-color: ${(props) =>{\r\n   \r\n    return props.active?' #ffc806;' : '#ddd';\r\n  }};\r\n  clip-path: polygon(\r\n    50% 0%,\r\n    61% 35%,\r\n    98% 35%,\r\n    68% 57%,\r\n    79% 91%,\r\n    50% 70%,\r\n    21% 91%,\r\n    32% 57%,\r\n    2% 35%,\r\n    39% 35%\r\n  );\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { SearchCard } from \"../styled\";\r\n\r\nexport const StyledActorCard = styled(SearchCard)`\r\n  .deathday {\r\n    margin: 0;\r\n    margin-top: 15px;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\n","import React from 'react'\r\nimport { StyledActorCard } from './ActorCard.styled'\r\nconst ActorCard = ({ image, name, gender, country, birthday, deathday }) => {\r\n  return (\r\n    <StyledActorCard>\r\n      <div className = \"img-wrapper\">\r\n        <img src={image} alt=\"actor\" />\r\n      </div>\r\n      <h1>\r\n        {name} {gender ? `(${gender})` : null}\r\n      </h1>\r\n      <p>{country ? `Comes from ${country}` : 'No country known'}</p>\r\n      {birthday ? <p>Born {birthday}</p> : null}\r\n      <p className = \"deathday\">{deathday ? `Died ${deathday}` : 'Alive'}</p>\r\n    </StyledActorCard>\r\n  );\r\n};\r\n\r\nexport default ActorCard\r\n","export default __webpack_public_path__ + \"static/media/not-found.6ba4af2e.png\";","import React from 'react'\r\nimport ActorCard from './ActorCard'\r\nimport notFound from '../../images/not-found.png'\r\nimport { FlexGrid } from '../styled'\r\nconst ActorGrid = ({data}) => {\r\n  return (\r\n     \r\n    <FlexGrid>\r\n       {\r\n         data.map(({person})=>{\r\n          return (<ActorCard \r\n                  key = {person.id} \r\n                  name = {person.name}\r\n                  country = {person.country?person.country.name : null}\r\n                  birthday = {person.birthday}\r\n                  deathday = {person.deathday}\r\n                  gender = {person.gender} \r\n                  image = {person.image?person.image.medium : notFound}\r\n                />)   \r\n         })\r\n       }\r\n    </FlexGrid>\r\n\r\n  )\r\n}\r\n\r\nexport default ActorGrid\r\n","import React,{memo} from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst RadioWrapper = styled.label`\r\n  display: block;\r\n  position: relative;\r\n  padding-left: 25px;\r\n  cursor: pointer;\r\n  font-size: 13px;\r\n  user-select: none;\r\n  font-weight: 700;\r\n  line-height: 1.65;\r\n\r\n  input {\r\n    position: absolute;\r\n    opacity: 0;\r\n    cursor: pointer;\r\n  }\r\n\r\n  span {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    height: 16px;\r\n    width: 16px;\r\n    background-color: #fff;\r\n    border: 2px solid ${({ theme }) => theme.mainColors.blue};\r\n    border-radius: 50%;\r\n  }\r\n\r\n  input:checked ~ span {\r\n    background-color: #fff;\r\n    border: 2px solid ${({ theme }) => theme.mainColors.blue};\r\n  }\r\n\r\n  span:after {\r\n    content: '';\r\n    position: absolute;\r\n    display: none;\r\n  }\r\n\r\n  input:checked ~ span:after {\r\n    display: block;\r\n  }\r\n\r\n  span:after {\r\n    top: 4px;\r\n    left: 4px;\r\n    width: 8px;\r\n    height: 8px;\r\n    border-radius: 50%;\r\n    background: ${({ theme }) => theme.mainColors.blue};\r\n  }\r\n`;\r\n\r\nconst CustomRadio = ({label,id,value,onChange,checked}) => {\r\n  return (\r\n  \r\n      \r\n       <RadioWrapper htmlFor = {id}>\r\n         {label}\r\n         <input id = {id}\r\n         type=\"radio\" \r\n         value = {value}\r\n         onChange = {onChange}\r\n         checked = {checked}\r\n         />\r\n         <span />\r\n       </RadioWrapper>\r\n      \r\n   \r\n  )\r\n}\r\n\r\nexport default memo(CustomRadio)\r\n","import styled from \"styled-components\";\r\n\r\nexport const TitleWrapper = styled.div`\r\n  text-align: center;\r\n  margin: 0 0 40px;\r\n\r\n  h1 {\r\n    color: ${({ theme }) => theme.mainColors.blue};\r\n    letter-spacing: 10px;\r\n    text-transform: uppercase;\r\n    margin: 0 0 10px;\r\n  }\r\n\r\n  p {\r\n    color: ${({ theme }) => theme.mainColors.dark};\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\n","import React,{memo} from 'react'\r\nimport  {TitleWrapper} from './Title.styled'\r\nconst Title = ({title,subtitle}) => {\r\n  return (\r\n    <TitleWrapper>\r\n       <h1>{title}</h1>\r\n       <p>{subtitle}</p>\r\n    </TitleWrapper>\r\n  )\r\n}\r\n\r\nexport default memo(Title) //if the props are same the component won't be rerendered \r\n//else it will rerender \r\n\r\n\r\n","import React from 'react'\r\nimport Navs from './Navs'\r\nimport Title from './Title'\r\nconst MainPageLayout = (props) => {\r\n  console.log(\"main page layout rendered\")\r\n  return (\r\n    <div>\r\n       <div>\r\n      <Title title = \"Box Office\" \r\n      subtitle = \"Are you looking for a movie or an actor?\">\r\n      </Title>   \r\n    <Navs></Navs>\r\n     {props.children}\r\n   </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MainPageLayout\r\n","import styled from \"styled-components\";\r\nimport { SearchCard } from \"../styled\";\r\n\r\nexport const StyledShowCard = styled(SearchCard)`\r\n  .btns {\r\n    margin-top: 15px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    a {\r\n      text-decoration-color: #000;\r\n      color: #000;\r\n      &:hover {\r\n        text-decoration-color: blue;\r\n        color: blue;\r\n      }\r\n    }\r\n    button {\r\n      outline: none;\r\n      border: 1px solid #8e8e8e;\r\n      border-radius: 15px;\r\n      padding: 5px 20px;\r\n      background-color: #fff;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      &:hover {\r\n        cursor: pointer;\r\n      }\r\n    }\r\n  }\r\n`;","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Star } from '../styled';\r\nimport {StyledShowCard} from './ShowCard.styled'\r\n\r\nconst ShowCard = ({ id, image, name, summary,onStarClick,isStarred }) => {\r\n  const summaryAsText = summary\r\n    ? `${summary.split(' ').slice(0, 10).join(' ').replace(/<.+?>/g, \"\")}...`\r\n    : 'No description';\r\n\r\n  return (\r\n    <StyledShowCard>\r\n      <div className = \"img-wrapper\">\r\n        <img src={image} alt=\"show\" />\r\n      </div>\r\n\r\n      <h1>{name}</h1>\r\n\r\n      <p>{summaryAsText}</p>\r\n\r\n      <div className = \"btns\">\r\n        <Link to={`/show/${id}`}>Read more</Link>\r\n        <button type=\"button\" onClick = {onStarClick}><Star active = {isStarred}/></button>\r\n      </div>\r\n    </StyledShowCard>\r\n  );\r\n};\r\n\r\nexport default ShowCard\r\n","import { useReducer,useEffect,useState } from \"react\";\r\n\r\n\r\nfunction showsReducer(prevState,action){\r\n\r\n  switch(action.type)\r\n  {\r\n    case 'ADD' :{\r\n      console.log(\"state changed here\");\r\n      return  [...prevState,action.showId]\r\n\r\n    }\r\n\r\n    case 'REMOVE' : {\r\n      console.log(\"state changed here\");\r\n      return prevState.filter( (showId)=> showId!==action.showId );\r\n    } \r\n\r\n    default : return prevState\r\n  }\r\n\r\n}\r\n\r\nfunction usePersistedReducer(reducer,initialState,key){\r\n  console.log(\"rendered\");\r\n  const [state,dispatch] = useReducer(reducer,initialState,(initial)=>{\r\n   \r\n    console.log(\"this is inital\");\r\n   console.log(initial);\r\n     const persisted = localStorage.getItem(key);\r\n\r\n      return persisted ? JSON.parse(persisted):initial\r\n   \r\n  });  //what this function return is set as initialState \r\n\r\n   useEffect(()=>{\r\n      console.log(\"useEffectrrr called\");\r\n    localStorage.setItem(key,JSON.stringify(state))\r\n   },[state,key])\r\n\r\n   return [state,dispatch];\r\n}\r\n\r\n\r\nexport function useShows(key='shows'){\r\n  console.log(\"use shows called \");\r\n  return usePersistedReducer(showsReducer,[],key);\r\n}\r\n\r\n\r\nexport function useLastQuery(key = 'lastQuery'){\r\n  const [input,setInput] = useState(()=>{\r\n    const persisted = sessionStorage.getItem(key);\r\n\r\n    return persisted ? JSON.parse(persisted):\"\";\r\n  });\r\n\r\n  const setPersistedInput = (newState)=>{\r\n    setInput(newState);\r\n    sessionStorage.setItem(key,JSON.stringify(newState));\r\n  }\r\n\r\n    return [input,setPersistedInput]\r\n}","import React from 'react'\r\nimport ShowCard from './ShowCard'\r\nimport notFound from '../../images/not-found.png';\r\nimport { FlexGrid } from '../styled';\r\nimport {useShows} from '../../misc/custom-hooks'\r\n\r\nconst ShowGrid = ({data}) => {\r\n  \r\n  const [starredShows,dispatchStarred] = useShows() ;\r\n  console.log('show grid called');\r\n  return (\r\n    \r\n    <FlexGrid>\r\n       {\r\n         \r\n         data.map((item)=>{\r\n           \r\n          const isStarred = starredShows.includes(item.show.id);\r\n\r\n           const onStarClick = ()=>\r\n           {\r\n             if(isStarred){\r\n               dispatchStarred({type :'REMOVE',showId : item.show.id});\r\n             }\r\n             else{\r\n               dispatchStarred({type:'ADD',showId : item.show.id});\r\n             }           \r\n           }\r\n          return (\r\n                <ShowCard \r\n                  key = {item.show.id} \r\n                  id={item.show.id} \r\n                  name = {item.show.name} \r\n                  image = {item.show.image?item.show.image.medium : notFound}\r\n                  summary = {item.show.summary}\r\n                  isStarred = {isStarred}\r\n                  onStarClick = {onStarClick}\r\n                />\r\n               )   \r\n         })\r\n       }\r\n    </FlexGrid>\r\n  )\r\n}\r\n\r\nexport default ShowGrid\r\n","const API_BASE_URL = `https://api.tvmaze.com`;\r\n\r\n\r\nexport async function apiGet(queryString){\r\n\r\nconst response = await fetch(`${API_BASE_URL}${queryString}`)\r\n                     .then((response)=>{\r\n                          return response.json();\r\n                     })\r\n\r\n  return response;      \r\n}\r\n","import styled from \"styled-components\";\r\nexport const SearchInput = styled.input`\r\n  display: block;\r\n  font-family: 'Roboto', sans-serif;\r\n  width: 200px;\r\n  margin: auto;\r\n  outline: none;\r\n  padding: 13px 15px;\r\n  border: 1px solid #dbdbdb;\r\n  box-shadow: 0px 0px 10px 0px rgba(219, 219, 219, 0.5);\r\n  font-size: 14px;\r\n  border-radius: 12px;\r\n  color: #8d8d8d;\r\n\r\n  &::placeholder {\r\n    font-weight: 300;\r\n    color: #8d8d8d;\r\n  }\r\n`;\r\n\r\nexport const RadioInputsWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: 20px 0;\r\n\r\n  div {\r\n    margin: 0 15px;\r\n  }\r\n`;\r\n\r\nexport const SearchButtonWrapper = styled.div`\r\n  text-align: center;\r\n  margin-bottom: 35px;\r\n  \r\n  button {\r\n    color: #fff;\r\n    background-color: ${({ theme }) => theme.mainColors.blue};\r\n    margin: auto;\r\n    padding: 10px 50px;\r\n    font-size: 15px;\r\n    border: none;\r\n    outline: none;\r\n    border-radius: 12px;\r\n    &:hover {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n","import React,{useState} from 'react'\r\nimport ActorGrid from '../components/actor/ActorGrid';\r\nimport CustomRadio from '../components/CustomRadio';\r\nimport MainPageLayout from '../components/MainPageLayout'\r\nimport ShowGrid from '../components/show/ShowGrid';\r\nimport { apiGet } from '../misc/config';\r\nimport { useLastQuery } from '../misc/custom-hooks';\r\nimport { RadioInputsWrapper, SearchButtonWrapper, SearchInput } from './Home.styled';\r\n\r\n\r\nconst Home = () => {\r\n\r\n \r\n\r\n  const [input,setInput] = useLastQuery();\r\n  const [results,setResults] = useState(null);\r\n  const [searchOption,setSearchOption] = useState('shows');\r\n\r\n\r\n\r\n\r\n  function onInputChange(event){\r\n     \r\n     \r\n     setInput(event.target.value);\r\n   \r\n  }\r\n\r\n  function onSearch()\r\n  {\r\n    // console.log(searchOption);\r\n    // console.log(input);\r\n    apiGet(`/search/${searchOption}?q=${input}`).then((response)=>{\r\n     \r\n       \r\n      setResults(response);\r\n    })\r\n\r\n   \r\n   \r\n  }\r\n  \r\n  function onKeyDown(event){\r\n     if(event.keyCode===13)\r\n      onSearch();\r\n  }\r\n\r\n  function renderResults(){\r\n     \r\n       if(results && results.length===0)\r\n         return <div>No Results</div>\r\n       else\r\n       if(results && results.length>0)\r\n        {\r\n          \r\n          return ( \r\n             <div>\r\n               {\r\n                results[0].show?<ShowGrid data = {results} /> :<ActorGrid  data  = {results}/>\r\n\r\n              }\r\n             </div>\r\n          )\r\n        }\r\n\r\n        return null;\r\n\r\n  }\r\n\r\n  function onRadioChange(event){\r\n     \r\n  //  console.log(event.target.value);\r\n    setSearchOption(event.target.value);\r\n\r\n   \r\n  }\r\n\r\n  const isShowSearch = searchOption==='shows';\r\n\r\n  return (\r\n    \r\n    <div>\r\n  \r\n      <MainPageLayout>\r\n      <SearchInput type = \"text\"\r\n       onKeyDown = {onKeyDown} \r\n       onChange = {(event)=>onInputChange(event)}\r\n        value = {input}\r\n        placeholder = \"Search for something\" \r\n     />\r\n\r\n     <RadioInputsWrapper>\r\n       <CustomRadio\r\n         label = \"Shows\"\r\n         id = \"shows-search\" \r\n         value = \"shows\" \r\n         onChange = {onRadioChange}\r\n         checked = {isShowSearch}\r\n       \r\n       />\r\n      \r\n      <div>\r\n      <CustomRadio\r\n         label = \"Actors\"\r\n         id=\"actors-search\" \r\n         value = \"people\" \r\n         onChange = {onRadioChange}\r\n         checked = {!isShowSearch}\r\n       \r\n       />\r\n      </div>\r\n       \r\n\r\n     </RadioInputsWrapper>\r\n\r\n    <SearchButtonWrapper>\r\n      <button type=\"button\" onClick = {onSearch}>\r\n        Search\r\n      </button>\r\n      </SearchButtonWrapper>\r\n      {renderResults()}\r\n      </MainPageLayout> \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import styled from \"styled-components\";\r\n\r\n\r\nexport const CastList = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n\r\n  .cast-item {\r\n    flex: 1 0 50%;\r\n    display: flex;\r\n    margin-bottom: 20px;\r\n    align-items: center;\r\n\r\n    @media only screen and (max-width: 768px) {\r\n      flex: 1 0 100%;\r\n    }\r\n  }\r\n\r\n  .pic-wrapper {\r\n    width: 50px;\r\n    min-width: 50px;\r\n    height: 50px;\r\n    overflow: hidden;\r\n    border-radius: 50%;\r\n    img {\r\n      object-fit: cover;\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n  }\r\n\r\n  .actor {\r\n    margin-left: 25px;\r\n    \r\n    .bold {\r\n      font-weight: bold;\r\n    }\r\n  }\r\n`;","import React from 'react'\r\nimport IMG_PLACEHOLDER from \"../../images/not-found.png\"\r\nimport { CastList } from './Cast.styled';\r\nconst Cast = ({ cast }) => {\r\n  return (\r\n    <CastList>\r\n      {cast.map(({ person, character, voice }, key) => (\r\n        <div key={key} className = \"cast-item\" >\r\n          <div className = \"pic-wrapper\">\r\n            <img\r\n              src={person.image ? person.image.medium : IMG_PLACEHOLDER}\r\n              alt=\"cast-person\"\r\n            />\r\n          </div>\r\n          <div className = \"actor\">\r\n            <span>\r\n              <span className = \"bold\">{person.name}</span> | {character.name} {voice ? '| Voice' : ''}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </CastList>\r\n  );\r\n};\r\nexport default Cast\r\n","import styled from \"styled-components\";\r\n\r\nexport const DetailsWrapper = styled.div`\r\n  p {\r\n    margin: 5px 0;\r\n\r\n    span {\r\n      font-weight: bold;\r\n    }\r\n  }\r\n`;","import React from 'react'\r\nimport { DetailsWrapper } from './Details.styled';\r\n\r\nconst Details = ({ status, premiered, network }) => {\r\n  return (\r\n    <DetailsWrapper>\r\n      <p>\r\n        Status: <span>{status}</span>\r\n      </p>\r\n      <p>\r\n        Premiered {premiered} {network ? `on ${network.name}` : null}\r\n      </p>\r\n    </DetailsWrapper>\r\n  );\r\n};\r\n\r\n\r\nexport default Details\r\n","import styled from \"styled-components\";\r\n\r\n\r\nexport const SeasonsWrapper = styled.div`\r\n  p {\r\n    margin: 5px 0;\r\n  }\r\n\r\n  span {\r\n    font-weight: 700;\r\n  }\r\n`;\r\n\r\nexport const SeasonList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  .season-item {\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 10px 0;\r\n\r\n    &:last-child {\r\n      margin-bottom: 0;\r\n    }\r\n\r\n    .left {\r\n      flex: 0 0 30%;\r\n      border-right: 1px solid #b0b0b0;\r\n      padding-right: 20px;\r\n    }\r\n\r\n    .right {\r\n      padding-left: 20px;\r\n      flex: 1;\r\n    }\r\n  }\r\n`;","import React from 'react'\r\nimport { SeasonList, SeasonsWrapper } from './Seasons.styled';\r\n\r\n// Seasons.js\r\nconst Seasons = ({ seasons }) => {\r\n  return (\r\n    <SeasonsWrapper>\r\n      <p>\r\n        Seasons in total: <span>{seasons.length}</span>\r\n      </p>\r\n      <p>\r\n        Episodes in total:{' '}\r\n        <span>\r\n          {seasons.reduce((acc, season) => acc + season.episodeOrder, 0)}\r\n        </span>\r\n      </p>\r\n      <SeasonList>\r\n        {seasons.map(season => (\r\n          <div key={season.id} className = \"season-item\">\r\n            <div className = \"left\">\r\n              <p>Season {season.number}</p>\r\n              <p>\r\n                Episodes: <span>{season.episodeOrder}</span>\r\n              </p>\r\n            </div>\r\n            <div className=\"right\">\r\n              Aired:{' '}\r\n              <span>\r\n                {season.premiereDate} - {season.endDate}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </SeasonList>\r\n    </SeasonsWrapper>\r\n  );\r\n};\r\n\r\n\r\nexport default Seasons\r\n","import styled from \"styled-components\";\r\n\r\nexport const MainDataWrapper = styled.div`\r\n  display: flex;\r\n  margin-bottom: 40px;\r\n\r\n  img {\r\n    min-width: 250px;\r\n    width: 300px;\r\n    max-height: 450px;\r\n    border: 1px solid #ddd;\r\n    border-radius: 40px;\r\n  }\r\n\r\n  .text-side {\r\n    margin-left: 20px;\r\n    .summary {\r\n      color: #5f5f5f;\r\n      line-height: 1.5;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    flex-wrap: wrap;\r\n    img {\r\n      margin-bottom: 20px;\r\n      margin: auto;\r\n    }\r\n    .text-side {\r\n      margin-left: 0;\r\n      margin-top: 20px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Headline = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n\r\n  h1 {\r\n    margin: 0;\r\n    border-right: 1px solid #ddd;\r\n    padding-right: 25px;\r\n    margin-right: 20px;\r\n  }\r\n\r\n  div {\r\n    display: flex;\r\n    align-items: center;\r\n    span {\r\n      margin-left: 10px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const TagList = styled.div`\r\n  display: inline-flex;\r\n  flex-wrap: wrap;\r\n\r\n  span {\r\n    margin: 6px;\r\n    margin-bottom: 0;\r\n    color: blue;\r\n    background-color: #d0c9ff;\r\n    padding: 3px 13px;\r\n    border-radius: 20px;\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\n","import React from 'react'\r\nimport IMG_PLACEHOLDER from \"../../images/not-found.png\"\r\nimport { Star } from '../styled';\r\nimport { Headline, MainDataWrapper, TagList } from './ShowMainData.styled';\r\n\r\nconst ShowMainData = ({ name, rating, summary, tags, image }) => {\r\n  return (\r\n    <MainDataWrapper>\r\n      <img src={image ? image.original : IMG_PLACEHOLDER} alt=\"show-cover\" />\r\n      <div className = \"text-side\">\r\n        <Headline>\r\n          <h1>{name}</h1>\r\n          <div>\r\n            <Star active = {true}/>\r\n            <span>{rating.average || 'N/A'}</span>\r\n          </div>\r\n        </Headline>\r\n        <div className=\"summary\" dangerouslySetInnerHTML={{ __html: summary }} />\r\n\r\n        <div>\r\n          Tags:{' '}\r\n          <TagList>\r\n            {tags.map((tag, i) => (\r\n              <span key={i}>{tag}</span>\r\n            ))}\r\n          </TagList> \r\n        </div>\r\n      </div>\r\n    </MainDataWrapper>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default ShowMainData\r\n","import styled from \"styled-components\";\r\n\r\n\r\nexport const ShowPageWrapper = styled.div`\r\n  padding: 0 20px;\r\n\r\n  @media only screen and (min-width: 516px) {\r\n    padding: 0 40px;\r\n  }\r\n\r\n  @media only screen and (min-width: 768px) {\r\n    padding: 0 60px;\r\n  }\r\n\r\n  @media only screen and (min-width: 992px) {\r\n    padding: 0 80px;\r\n  }\r\n`;\r\n\r\nexport const InfoBlock = styled.div`\r\n  margin-bottom: 40px;\r\n  h2 {\r\n    margin: 0;\r\n    margin-bottom: 30px;\r\n    font-size: 22px;\r\n  }\r\n`;\r\n","import React,{useReducer,useEffect} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport Cast from '../components/show/Cast';\r\nimport Details from '../components/show/Details';\r\nimport Seasons from '../components/show/Seasons';\r\nimport ShowMainData from '../components/show/ShowMainData';\r\nimport { apiGet } from '../misc/config';\r\nimport { InfoBlock, ShowPageWrapper } from './Show.styled';\r\nfunction Shows() {\r\n  \r\n  const params = useParams(); //this oarams will contain the id of the params \r\n  const {id} = params;\r\n \r\n\r\n  const reducer = (prevState, action)=>{\r\n     \r\n    switch(action.type)\r\n    {\r\n      \r\n      case 'FETCH_SUCCESS' : {\r\n        return {...prevState,isLoading:false,error:null,show:action.show}\r\n      }\r\n\r\n      case 'FETCH_FAILED' : {\r\n        return {...prevState,isLoading:false,error:action.error}\r\n      }\r\n\r\n      default : return prevState;\r\n    }\r\n  }\r\n\r\n  const initialState = {\r\n    show:null,\r\n    isLoading : true,\r\n    error : null\r\n  }\r\n\r\n  const [state,dispatch] = useReducer(reducer,initialState);\r\n\r\n   console.log(\"this is state\");\r\n   console.log(state);\r\n\r\n    const {show,isLoading,error} =state;\r\n\r\n  // const [show,setShow] = useState(null);\r\n  // const [isLoading,setIsLoading] = useState(true);\r\n  // const [error,setError] = useState(null);\r\n\r\n  //  console.log(\"show rerendered\");\r\n\r\n  useEffect(()=>{\r\n  \r\n  console.log(\"useEffectrun\");\r\n    let isMounted = true;\r\n\r\n    apiGet(`/shows/${id}?embed[]=seasons&embed[]=cast`).then((result)=>{\r\n\r\n     \r\n\r\n      if(isMounted){\r\n      \r\n        setTimeout(()=>{\r\n          dispatch({type:'FETCH_SUCCESS',show:result})\r\n        },2000);\r\n          \r\n      }\r\n      \r\n    }).catch((err)=>{\r\n      if(isMounted)\r\n      {\r\n        dispatch({type:'FETCH_FAILED',error:err.message})\r\n      }\r\n\r\n    })\r\n\r\n    return ()=>{\r\n        isMounted = false;\r\n    }\r\n  },[id]);\r\n\r\n  \r\n   if(isLoading)\r\n   {\r\n    console.log(\"isLoading rerendered\")\r\n    return <div>Data is being loaded</div>\r\n   }\r\n\r\n    if(error)\r\n    { \r\n     console.log(\"Error in data loading rendered\");\r\n     return <div>Error in data loading</div>\r\n    }\r\n\r\n    return (\r\n      \r\n     <ShowPageWrapper>\r\n      <ShowMainData image = {show.image} name = {show.name} \r\n        rating = {show.rating} \r\n        summary = {show.summary} \r\n         tags = {show.genres}  \r\n        />\r\n\r\n      <InfoBlock>\r\n        <h2>Details</h2>\r\n        <Details  \r\n          status = {show.status} \r\n           network = {show.network}\r\n           premiered = {show.premiered}\r\n          />\r\n      </InfoBlock>\r\n\r\n      <InfoBlock>\r\n        <h2>Seasons</h2>\r\n        <Seasons seasons = {show._embedded.seasons}/>\r\n      </InfoBlock>\r\n\r\n      <InfoBlock>\r\n        <h2>Cast</h2>\r\n        <Cast cast = {show._embedded.cast} />\r\n      </InfoBlock>\r\n\r\n     </ShowPageWrapper>\r\n    )\r\n}\r\n\r\nexport default Shows\r\n","import React, { useState,useEffect } from 'react'\r\nimport MainPageLayout from '../components/MainPageLayout'\r\nimport { useShows } from '../misc/custom-hooks';\r\nimport {apiGet} from '../misc/config'\r\nimport ShowGrid from '../components/show/ShowGrid';\r\nconst Starred = () => {\r\n\r\n  const [starred] = useShows();\r\n  const [shows,setShows] = useState(null);\r\n  const[isLoading,setIsLoading] = useState(true);\r\n  const[error,setError] = useState(null);\r\n\r\n   //to fetch the data when the component mounts we use useEffect hooks\r\n   useEffect(()=>{\r\n       \r\n if(starred && starred.length>0){\r\n   const promises = starred.map((showId)=>{\r\n     return apiGet(`/shows/${showId}`)\r\n   })\r\n\r\n   Promise.all(promises).then(apidata=>{\r\n     console.log('apidata',apidata);\r\n    return apidata.map((show)=>{\r\n      return {show};\r\n    })\r\n   }).then(results =>{\r\n     console.log('results',results);\r\n     setShows(results);\r\n     setIsLoading(false);\r\n\r\n   }).catch((error)=>{\r\n      setError(error.message);\r\n      setIsLoading(false);\r\n   });\r\n }else{\r\n   setIsLoading(false)\r\n }\r\n   },[starred])\r\n  return (\r\n    <div>\r\n     <MainPageLayout> \r\n       {isLoading && <div>Data is Loading</div>}\r\n      {error && <div>Error Occured</div>}\r\n      {!isLoading && !shows && <div>No Starred Shows</div>}\r\n      {!isLoading && !error && shows && <ShowGrid data ={shows}/>}\r\n       </MainPageLayout>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Starred\r\n","import React from 'react';\nimport {Switch,Route} from 'react-router-dom';\nimport Navs from './components/Navs';\nimport Home from './Pages/Home';\nimport Shows from './Pages/Shows';\nimport Starred from './Pages/Starred';\nimport {ThemeProvider} from 'styled-components'\n\nconst theme = {\n  mainColors: {\n    blue: '#2400ff',\n    gray: '#c6c6c6',\n    dark: '#353535',\n  },\n};\n\nfunction App() {\n\n  \n  return (\n   <ThemeProvider theme = {theme}>\n   \n   <Switch>\n     <Route exact  path = \"/\">\n       <Home></Home>\n     </Route>\n\n     <Route exact  path = \"/starred\">\n       <Starred></Starred> \n     </Route>\n\n     <Route exact path = \"/show/:id\">  {/* this colon is for dynamic route like /show/123 /show/12\n      everything will be opening this route \n     */\n     }\n       <Shows></Shows> \n     </Route>\n    <Route>\n      Page Not Found\n    </Route>\n   </Switch>\n   </ThemeProvider>\n  );\n}\n\nexport default App;\n","/* eslint-disable */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport {HashRouter} from 'react-router-dom'\n//HashRouter configure app for client side routing only \n\nReactDOM.render(<HashRouter><App/></HashRouter>,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n\n"],"sourceRoot":""}